---
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License").
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
AWSTemplateFormatVersion: 2010-09-09
Description: AWS SaaS Boost Metrics Service
Parameters:
  Environment:
    Description: Environment name
    Type: String
  SaaSBoostBucket:
    Description: SaaS Boost assets S3 bucket
    Type: String
  LambdaSourceFolder:
    Description: Folder for lambda source code to change on each deployment
    Type: String
  SaaSBoostUtilsLayer:
    Description: Utils Layer ARN
    Type: String
  ApiGatewayHelperLayer:
    Description: API Gateway Helper Layer ARN
    Type: String
  ALBAccessLogs:
    Description: ALB Access Logs Bucket
    Type: String
  AthenaOutput:
    Description: Web S3 bucket
    Type: String
  SaaSBoostPrivateApi:
    Description: SaaS Boost Private API
    Type: String
  PrivateApiStage:
    Description: The API Gateway REST API stage name for the SaaS Boost private API
    Type: String
Mappings:
  # Mappings for ELB accounts from
  # https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-access-logs.htm
  # Be sure to leave the account id's quoted or they'll
  # get transformed to exponential notation by FindInMap
  Region2ELBAccountId:
    us-east-1:
      AccountId: '127311923021'
    us-east-2:
      AccountId: '033677994240'
    us-west-1:
      AccountId: '027434742980'
    us-west-2:
      AccountId: '797873946194'
    af-south-1:
      AccountId: '098369216593'
    ca-central-1:
      AccountId: '985666609251'
    eu-central-1:
      AccountId: '054676820928'
    eu-west-1:
      AccountId: '156460612806'
    eu-west-2:
      AccountId: '652711504416'
    eu-south-1:
      AccountId: '635631232127'
    eu-west-3:
      AccountId: '009996457667'
    eu-north-1:
      AccountId: '897822967062'
    ap-east-1:
      AccountId: '754344448648'
    ap-northeast-1:
      AccountId: '582318560864'
    ap-northeast-2:
      AccountId: '600734575887'
    ap-northeast-3:
      AccountId: '383597477331'
    ap-southeast-1:
      AccountId: '114774131450'
    ap-southeast-2:
      AccountId: '783225319266'
    ap-south-1:
      AccountId: '718504428378'
    me-south-1:
      AccountId: '076674570225'
    sa-east-1:
      AccountId: '507241528517'
    cn-north-1:
      AccountId: '638102146993'
Resources:
  ALBAccessLogsDatabase:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref 'AWS::AccountId'
      DatabaseInput:
        Description: SaaS Boost Access Logs Database
        Name: !Sub sb_${Environment}_alb_access_logs
  # Publish access logs data to S3 bucket for graphing
  ALBLogsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ALBAccessLogs
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ELBAccessLogs
            Effect: Allow
            Principal:
              AWS:
                Fn::Join: ['', ['arn:aws-cn:iam::', !FindInMap [Region2ELBAccountId, !Ref 'AWS::Region', 'AccountId'], ':root']]
            Action: s3:PutObject
            Resource: !Sub arn:aws-cn:s3:::${ALBAccessLogs}/access-logs/AWSLogs/${AWS::AccountId}/*
          - Sid: AWSLogDeliveryWrite
            Effect: Allow
            Principal:
              Service: delivery.logs.amazonaws.com
            Action: s3:PutObject
            Resource: !Sub arn:aws-cn:s3:::${ALBAccessLogs}/access-logs/AWSLogs/${AWS::AccountId}/*
            Condition:
              StringEquals:
                s3:x-amz-acl: bucket-owner-full-control
          - Sid: AWSLogDeliveryAclCheck
            Effect: Allow
            Principal:
              Service: delivery.logs.amazonaws.com
            Action: s3:GetBucketAcl
            Resource: !Sub arn:aws-cn:s3:::${ALBAccessLogs}
          - Sid: DenyNonHttps
            Effect: Deny
            Action: s3:*
            Principal: '*'
            Resource:
              - !Sub arn:aws-cn:s3:::${ALBAccessLogs}/*
              - !Sub arn:aws-cn:s3:::${ALBAccessLogs}
            Condition:
              Bool: { 'aws:SecureTransport': false }
  AccessLogsTable:
    Type: AWS::Glue::Table
    Properties:
      CatalogId: !Ref 'AWS::AccountId'
      DatabaseName: !Ref ALBAccessLogsDatabase
      TableInput:
        Description: ALB Access Logs from Tenants
        Name: !Sub sb_${Environment}_access_logs
        Owner: saas-boost
        TableType: EXTERNAL_TABLE
        # PartitionKeys:
        #   - Name: time
        #     Type: string
        StorageDescriptor:
          Columns:
            - Name: type
              Type: string
            - Name: time
              Type: string
            - Name: elb
              Type: string
            - Name: client_ip
              Type: string
            - Name: client_port
              Type: int
            - Name: target_ip
              Type: string
            - Name: target_port
              Type: int
            - Name: request_processing_time
              Type: double
            - Name: target_processing_time
              Type: double
            - Name: response_processing_time
              Type: double
            - Name: elb_status_code
              Type: string
            - Name: target_status_code
              Type: string
            - Name: received_bytes
              Type: bigint
            - Name: sent_bytes
              Type: bigint
            - Name: request_verb
              Type: string
            - Name: request_url
              Type: string
            - Name: request_proto
              Type: string
            - Name: user_agent
              Type: string
            - Name: ssl_cipher
              Type: string
            - Name: ssl_protocol
              Type: string
            - Name: target_group_arn
              Type: string
            - Name: trace_id
              Type: string
            - Name: domain_name
              Type: string
            - Name: chosen_cert_arn
              Type: string
            - Name: matched_rule_priority
              Type: string
            - Name: request_creation_time
              Type: string
            - Name: actions_executed
              Type: string
            - Name: redirect_url
              Type: string
            - Name: lambda_error_reason
              Type: string
            - Name: target_port_list
              Type: string
            - Name: target_status_code_list
              Type: string
            - Name: new_field
              Type: string
          Compressed: False
          Location: !Sub s3://${ALBAccessLogs}/access-logs/AWSLogs/${AWS::AccountId}/elasticloadbalancing/${AWS::Region}
          InputFormat: org.apache.hadoop.mapred.TextInputFormat
          OutputFormat: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
          SerdeInfo:
            SerializationLibrary: org.apache.hadoop.hive.serde2.RegexSerDe
            Parameters: {"serialization.format": "1","input.regex":
                        '([^ ]*) ([^ ]*) ([^ ]*) ([^ ]*):([0-9]*) ([^ ]*)[:-]([0-9]*) ([-.0-9]*) ([-.0-9]*) ([-.0-9]*) (|[-0-9]*) (-|[-0-9]*) ([-0-9]*) ([-0-9]*) \"([^ ]*) ([^ ]*) (- |[^ ]*)\" \"([^\"]*)\" ([A-Z0-9-]+) ([A-Za-z0-9.-]*) ([^ ]*) \"([^\"]*)\" \"([^\"]*)\" \"([^\"]*)\" ([-.0-9]*) ([^ ]*) \"([^\"]*)\" \"([^\"]*)\" \"([^ ]*)\" \"([^\s]+)\" \"([^\s]+)\"(.*)'
                         }
  PublishAccessLogMetricsFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub sb-${Environment}-metrics-pub-${AWS::Region}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: !Sub sb-${Environment}-metrics-pub-policy-${AWS::Region}
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - athena:ListDataCatalogs
                  - athena:ListWorkGroups
                Resource: '*'
              - Effect: Allow
                Action:
                  - logs:PutLogEvents
                Resource:
                  - !Sub arn:aws-cn:logs:${AWS::Region}:${AWS::AccountId}:log-group:*:log-stream:*
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:DescribeLogStreams
                  - logs:CreateLogGroup
                Resource:
                  - !Sub arn:aws-cn:logs:${AWS::Region}:${AWS::AccountId}:log-group:*
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:ListBucketMultipartUploads
                  - s3:AbortMultipartUpload
                  - s3:ListBucket
                  - s3:ListMultipartUploadParts
                  - s3:GetBucketLocation
                Resource:
                  - !Sub arn:aws-cn:s3:::${AthenaOutput}
                  - !Sub arn:aws-cn:s3:::${AthenaOutput}/*
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:ListBucketMultipartUploads
                  - s3:AbortMultipartUpload
                  - s3:ListBucket
                  - s3:ListMultipartUploadParts
                  - s3:GetBucketLocation
                  - athena:*
                  - glue:GetTable
                  - glue:GetDatabase
                  - glue:BatchCreatePartition
                  - glue:GetPartitions
                Resource:
                  - !Sub arn:aws-cn:glue:${AWS::Region}:${AWS::AccountId}:database/${ALBAccessLogsDatabase}
                  - !Sub arn:aws-cn:glue:${AWS::Region}:${AWS::AccountId}:table/${ALBAccessLogsDatabase}/${AccessLogsTable}
                  - !Sub arn:aws-cn:glue:${AWS::Region}:${AWS::AccountId}:catalog
                  - !Sub arn:aws-cn:athena:${AWS::Region}:${AWS::AccountId}:workgroup/primary
                  - !Sub arn:aws-cn:s3:::${ALBAccessLogs}/*
                  - !Sub arn:aws-cn:s3:::${ALBAccessLogs}
  # Request count metrics
  PublishRequestCountLog:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/sb-${Environment}-metrics-pub-requests
      RetentionInDays: 30
  PublishRequestCountPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt PublishRequestCountFunction.Arn
      Principal: 'events.amazonaws.com'
      SourceArn: !GetAtt PublishRequestCountMetricsEvent.Arn
  PublishRequestCountFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub sb-${Environment}-metrics-pub-requests
      Role: !GetAtt PublishAccessLogMetricsFunctionRole.Arn
      Runtime: java11
      Timeout: 900
      MemorySize: 384
      Handler: com.amazon.aws.partners.saasfactory.saasboost.MetricService::publishRequestCountMetrics
      Code:
        S3Bucket: !Ref SaaSBoostBucket
        S3Key: !Sub ${LambdaSourceFolder}/MetricService-lambda.zip
      Layers:
        - !Ref SaaSBoostUtilsLayer
      Environment:
        Variables:
          ATHENA_DATABASE: !Ref ALBAccessLogsDatabase
          S3_ATHENA_BUCKET: !Ref AthenaOutput
          S3_ATHENA_OUTPUT_PATH: !Sub s3://${AthenaOutput}/query-results/
          ACCESS_LOGS_TABLE: !Ref AccessLogsTable
      Tags:
        - Key: "Application"
          Value: "SaaSBoost"
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "BoostService"
          Value: "Metrics"
  # Publish path request count metrics to S3 bucket
  PublishRequestCountMetricsEvent:
    Type: AWS::Events::Rule
    Properties:
      Description: A scheduled task to publish access log metrics to s3 web bucket
      # Run this every 30 minutes
      ScheduleExpression: "cron(0/30 * * * ? *)"
      State: ENABLED
      Targets:
        - Arn: !GetAtt PublishRequestCountFunction.Arn
          Id: PublishRequestCountFunction
  PublishRequestCountMetricsEventRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: PublishRequestCountEvent-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource: !GetAtt PublishRequestCountFunction.Arn
  # Publish response times metrics
  PublishResponseTimeLog:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/sb-${Environment}-metrics-pub-response
      RetentionInDays: 30
  PublishResponseTimePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt PublishResponseTimeFunction.Arn
      Principal: 'events.amazonaws.com'
      SourceArn: !GetAtt PublishResponseTimeMetricsEvent.Arn
  PublishResponseTimeFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub sb-${Environment}-metrics-pub-response
      Role: !GetAtt PublishAccessLogMetricsFunctionRole.Arn
      Runtime: java11
      Timeout: 900
      MemorySize: 384
      Handler: com.amazon.aws.partners.saasfactory.saasboost.MetricService::publishResponseTimeMetrics
      Code:
        S3Bucket: !Ref SaaSBoostBucket
        S3Key: !Sub ${LambdaSourceFolder}/MetricService-lambda.zip
      Layers:
        - !Ref SaaSBoostUtilsLayer
      Environment:
        Variables:
          ATHENA_DATABASE: !Ref ALBAccessLogsDatabase
          S3_ATHENA_BUCKET: !Ref AthenaOutput
          S3_ATHENA_OUTPUT_PATH: !Sub s3://${AthenaOutput}/query-results/
          ACCESS_LOGS_TABLE: !Ref AccessLogsTable
      Tags:
        - Key: "Application"
          Value: "SaaSBoost"
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "BoostService"
          Value: "Metrics"
  # Event to Publish path request count metrics to S3 bucket
  PublishResponseTimeMetricsEvent:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub sb-publish-access-log-metrics-${Environment}
      Description: A scheduled task to publish access log metrics to s3 web bucket
      # Run this every 30 minutes
      ScheduleExpression: "cron(0/30 * * * ? *)"
      State: ENABLED
      Targets:
        - Arn: !GetAtt PublishResponseTimeFunction.Arn
          Id: PublishResponseTimeFunction
  PublishResponseTimeMetricsEventRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: PublishResponseTimeEvent-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource: !GetAtt PublishResponseTimeFunction.Arn

### Add partition daily
  AddAthenaPartitionLog:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/sb-${Environment}-metrics-add-partition
      RetentionInDays: 30
  AddAthenaPartitionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt AddAthenaPartitionFunction.Arn
      Principal: 'events.amazonaws.com'
      SourceArn: !GetAtt AddAthenaPartitionEvent.Arn
  AddAthenaPartitionFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub sb-${Environment}-metrics-add-partition
      Role: !GetAtt PublishAccessLogMetricsFunctionRole.Arn
      Runtime: java11
      Timeout: 900
      MemorySize: 384
      Handler: com.amazon.aws.partners.saasfactory.saasboost.MetricService::addAthenaPartition
      Code:
        S3Bucket: !Ref SaaSBoostBucket
        S3Key: !Sub ${LambdaSourceFolder}/MetricService-lambda.zip
      Layers:
        - !Ref SaaSBoostUtilsLayer
      Environment:
        Variables:
          ATHENA_DATABASE: !Ref ALBAccessLogsDatabase
          S3_ATHENA_BUCKET: !Ref AthenaOutput
          S3_ATHENA_OUTPUT_PATH: !Sub s3://${AthenaOutput}/query-results/
          ACCESS_LOGS_TABLE: !Ref AccessLogsTable
          ACCESS_LOGS_PATH: !Sub s3://${ALBAccessLogs}/access-logs/AWSLogs/${AWS::AccountId}/elasticloadbalancing/${AWS::Region}
      Tags:
        - Key: "Application"
          Value: "SaaSBoost"
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "BoostService"
          Value: "Metrics"
  # Publish path request count metrics to S3 bucket
  AddAthenaPartitionEvent:
    Type: AWS::Events::Rule
    Properties:
      Description: A scheduled task to add partition for access logs daily
      # Run at 00:01 every day
      ScheduleExpression: "cron(15 0 * * ? *)"
      State: DISABLED
      Targets:
        - Arn: !GetAtt AddAthenaPartitionFunction.Arn
          Id: AddAthenaPartitionFunction
  AddAthenaPartitionEventRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: AddAthenaPartitionEvent-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource: !GetAtt AddAthenaPartitionFunction.Arn
  MetricServiceExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub sb-${Environment}-metric-svc-role-${AWS::Region}
      Path: '/'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: !Sub sb-${Environment}-metric-svc-policy-${AWS::Region}
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:PutLogEvents
                Resource:
                  - !Sub arn:aws-cn:logs:${AWS::Region}:${AWS::AccountId}:log-group:*:log-stream:*
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:DescribeLogStreams
                Resource:
                  - !Sub arn:aws-cn:logs:${AWS::Region}:${AWS::AccountId}:log-group:*
              - Effect: Allow
                Action:
                  - cloudwatch:GetMetricData
                  - application-autoscaling:DescribeScalableTargets
                Resource: '*'
              - Effect: Allow
                Action:
                  - ssm:GetParametersByPath
                  - ssm:GetParameters
                  - ssm:GetParameter
                Resource: !Sub arn:aws-cn:ssm:${AWS::Region}:${AWS::AccountId}:parameter/*
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource: !Sub arn:aws-cn:iam::${AWS::AccountId}:role/sb-private-api-trust-role-${Environment}-${AWS::Region}
  AlbAccessLogQueryFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub sb-${Environment}-metrics-alb-query-${AWS::Region}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: !Sub sb-${Environment}-metrics-pub-policy-${AWS::Region}
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - athena:ListDataCatalogs
                  - athena:ListWorkGroups
                Resource: '*'
              - Effect: Allow
                Action:
                  - logs:PutLogEvents
                Resource:
                  - !Sub arn:aws-cn:logs:${AWS::Region}:${AWS::AccountId}:log-group:*:log-stream:*
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:DescribeLogStreams
                Resource:
                  - !Sub arn:aws-cn:logs:${AWS::Region}:${AWS::AccountId}:log-group:*
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:ListBucketMultipartUploads
                  - s3:AbortMultipartUpload
                  - s3:ListBucket
                  - s3:ListMultipartUploadParts
                  - s3:GetBucketLocation
                Resource:
                  - !Sub arn:aws-cn:s3:::${AthenaOutput}
                  - !Sub arn:aws-cn:s3:::${AthenaOutput}/*
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:ListBucketMultipartUploads
                  - s3:AbortMultipartUpload
                  - s3:ListBucket
                  - s3:ListMultipartUploadParts
                  - s3:GetBucketLocation
                  - athena:*
                  - glue:GetTable
                  - glue:GetDatabase
                  - glue:GetPartitions
                Resource:
                  - !Sub arn:aws-cn:glue:${AWS::Region}:${AWS::AccountId}:database/${ALBAccessLogsDatabase}
                  - !Sub arn:aws-cn:glue:${AWS::Region}:${AWS::AccountId}:table/${ALBAccessLogsDatabase}/${AccessLogsTable}
                  - !Sub arn:aws-cn:glue:${AWS::Region}:${AWS::AccountId}:catalog
                  - !Sub arn:aws-cn:athena:${AWS::Region}:${AWS::AccountId}:workgroup/primary
                  - !Sub arn:aws-cn:s3:::${ALBAccessLogs}/*
                  - !Sub arn:aws-cn:s3:::${ALBAccessLogs}
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource: !Sub arn:aws-cn:iam::${AWS::AccountId}:role/sb-private-api-trust-role-${Environment}-${AWS::Region}
  MetricsPresignedUrlFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub sb-${Environment}-metrics-presigned
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: !Sub sb-${Environment}-metrics-presigned
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:PutLogEvents
                Resource:
                  - !Sub arn:aws-cn:logs:${AWS::Region}:${AWS::AccountId}:log-group:*:log-stream:*
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:DescribeLogStreams
                Resource:
                  - !Sub arn:aws-cn:logs:${AWS::Region}:${AWS::AccountId}:log-group:*
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:ListBucketMultipartUploads
                  - s3:AbortMultipartUpload
                  - s3:ListBucket
                  - s3:ListMultipartUploadParts
                  - s3:GetBucketLocation
                Resource:
                  - !Sub arn:aws-cn:s3:::${AthenaOutput}
                  - !Sub arn:aws-cn:s3:::${AthenaOutput}/*
  MetricServiceQueryLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/sb-${Environment}-metrics-query
      RetentionInDays: 30
  MetricServiceQuery:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub sb-${Environment}-metrics-query
      Role: !GetAtt MetricServiceExecutionRole.Arn
      Runtime: java11
      Timeout: 300
      MemorySize: 1024
      Handler: com.amazon.aws.partners.saasfactory.saasboost.MetricService::queryMetrics
      Code:
        S3Bucket: !Ref SaaSBoostBucket
        S3Key: !Sub ${LambdaSourceFolder}/MetricService-lambda.zip
      Layers:
        - !Ref SaaSBoostUtilsLayer
        - !Ref ApiGatewayHelperLayer
      Environment:
        Variables:
          ATHENA_DATABASE: !Ref ALBAccessLogsDatabase
          S3_ATHENA_BUCKET: !Ref AthenaOutput
          S3_ATHENA_OUTPUT_PATH: !Sub s3://${AthenaOutput}/query-results/
          ACCESS_LOGS_TABLE: !Ref AccessLogsTable
          API_TRUST_ROLE: !Sub arn:aws-cn:iam::${AWS::AccountId}:role/sb-private-api-trust-role-${Environment}-${AWS::Region}
          API_GATEWAY_HOST: !Sub ${SaaSBoostPrivateApi}.execute-api.${AWS::Region}.amazonaws.com
          API_GATEWAY_STAGE: !Ref PrivateApiStage
      Tags:
        - Key: "Application"
          Value: "SaaSBoost"
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "BoostService"
          Value: "Metrics"
  MetricsServiceDatasetsLog:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/sb-${Environment}-metrics-datasets
      RetentionInDays: 30
  MetricsServiceDatasets:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub sb-${Environment}-metrics-datasets
      Role: !GetAtt MetricsPresignedUrlFunctionRole.Arn
      Runtime: java11
      Timeout: 900
      MemorySize: 384
      Handler: com.amazon.aws.partners.saasfactory.saasboost.MetricService::getAccessMetricsSignedUrls
      Code:
        S3Bucket: !Ref SaaSBoostBucket
        S3Key: !Sub ${LambdaSourceFolder}/MetricService-lambda.zip
      Layers:
        - !Ref SaaSBoostUtilsLayer
      Environment:
        Variables:
          ATHENA_DATABASE: !Ref ALBAccessLogsDatabase
          S3_ATHENA_BUCKET: !Ref AthenaOutput
          S3_ATHENA_OUTPUT_PATH: !Sub s3://${AthenaOutput}/query-results/
          ACCESS_LOGS_TABLE: !Ref AccessLogsTable
      Tags:
        - Key: "Application"
          Value: "SaaSBoost"
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "BoostService"
          Value: "Metrics"
  AlbAccessQueryLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/sb-${Environment}-metrics-access-log-query
      RetentionInDays: 30
  AlbAccessQuery:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub sb-${Environment}-metrics-access-log-query
      Role: !GetAtt AlbAccessLogQueryFunctionRole.Arn
      Runtime: java11
      Timeout: 300
      MemorySize: 1024
      Handler: com.amazon.aws.partners.saasfactory.saasboost.MetricService::queryAccessLogs
      Code:
        S3Bucket: !Ref SaaSBoostBucket
        S3Key: !Sub ${LambdaSourceFolder}/MetricService-lambda.zip
      Layers:
        - !Ref SaaSBoostUtilsLayer
        - !Ref ApiGatewayHelperLayer
      Environment:
        Variables:
          ATHENA_DATABASE: !Ref ALBAccessLogsDatabase
          S3_ATHENA_BUCKET: !Ref AthenaOutput
          S3_ATHENA_OUTPUT_PATH: !Sub s3://${AthenaOutput}/query-results/
          ACCESS_LOGS_TABLE: !Ref AccessLogsTable
          API_TRUST_ROLE: !Sub arn:aws-cn:iam::${AWS::AccountId}:role/sb-private-api-trust-role-${Environment}-${AWS::Region}
          API_GATEWAY_HOST: !Sub ${SaaSBoostPrivateApi}.execute-api.${AWS::Region}.amazonaws.com
          API_GATEWAY_STAGE: !Ref PrivateApiStage
      Tags:
        - Key: "Application"
          Value: "SaaSBoost"
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "BoostService"
          Value: "Metrics"
Outputs:
  ALBAccessLogsDatabase:
    Description: Athena Database for ALB Access Logs
    Value: !Ref ALBAccessLogsDatabase
  AccessLogsTable:
    Description: Athena Access Logs Table
    Value: !Ref AccessLogsTable
  QueryArn:
    Description: Metrics Service query Lambda ARN
    Value: !GetAtt MetricServiceQuery.Arn
  DatasetsArn:
    Description: Metrics Service datasets Lambda ARN
    Value: !GetAtt MetricsServiceDatasets.Arn
  AlbQueryArn:
    Description: Metrics Service ALB metric query Lambda ARN
    Value: !GetAtt AlbAccessQuery.Arn
...